Implement a CSP solver for Sudoku using forward checking and backtracking with the Most Restricted Variable and Least Constraining Value heuristics. You should use the Most Constraining Variable heuristic as a tie breaker. Have your solver count the total number of variable assignments it makes (including backtracking).

c. [20 pts ] You can find a set of Sudoku problems with different numbers of initial values in problems.zipView in a new window. Each file contains 9 rows of exactly 9 numbers. Numbers within a line are separated by whitespace. The value 0 is used to indicate a blank space in the grid. For example, the first line of the example puzzle above would be written: 5 3 0 0 7 0 0 0 0. Run your solver on each problem instance, and plot mean number of steps against number of initial values. To avoid spending a (very) long time collecting data, your solver should ‘give up’ if it needs to take more than 10,000 steps. Describe your findings and provide an explanation for what you observe.
